spring:
  application:
    name: gatewayserver
  config:
    import: "optional:configserver:http://localhost:8071/"
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
  cloud:
    gateway:
      # discovery:
      #   locator:
      #     enabled: false
      #     lowerCaseServiceId: true
      httpclient:
        connect-timeout: 1000
        response-timeout: 10s
    refresh:
      enabled: false
    kubernetes:
      discovery:
        # discovery-server-url: "http://spring-cloud-kubernetes-discoveryserver"
        enabled: true
        all-namespaces: true
    discovery:
      client:
        health-indicator:
          enabled: false
  data:
    redis:
      connect-timeout: 2s
      host: localhost
      port: 6379
      timeout: 1s
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: "http://localhost:7080/realms/master/protocol/openid-connect/certs"

info:
  app:
    name: gatewayserver
    description: "Spring Boot 3 - Microservices: Gateway Server Application"
    version: "1.0.0"

management:
  endpoints:
    web:
      exposure:
        include: "*"
        # include: "refresh"
        # include: "bus-refresh"
  endpoint:
    gateway:
      enabled: true
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}


resilience4j:
  ratelimiter:
    rateLimiterAspectOrder: 1
  retry:
    retryAspectOrder: 2
  circuitbreaker:
    circuit-breaker-aspect-order: 3
    configs:
      default:
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 2
        failureRateThreshold: 50
        waitDurationInOpenState: 10000

logging:
  level:
    com:
      jovisco: debug
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"
    